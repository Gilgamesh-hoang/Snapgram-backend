# Application
spring.application.name=Snapgram-backend
server.port=8182
API_PREFIX=/api/v1
application.backend.url=http://localhost:8182
application.frontend.url=http://localhost:5173
application.sentiment-service.url=http://localhost:8111
# Socket
socket-server.port=8085
socket-server.host=localhost
# MultiPart
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=100MB
# Database
spring.datasource.hikari.maximum-pool-size=4
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/snapgram
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
# Hibernate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true
# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.show-actuator=true
#Security
aes.secret_key=123456789012345678901234
# JWT's secret key
# 1 hour
jwt.access_token.duration=3600000
# 10 days
jwt.refresh_token.duration=864000000
# EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Redis
spring.data.redis.database=0
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=root
spring.data.redis.timeout=60000
# Elasticsearch
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.password=elasticsearch
spring.elasticsearch.username=root
# Auth Google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
# Cloudinary
cloudinary.cloud_name=
cloudinary.api_key=
cloudinary.api_secret=
cloudinary.secure=true
cloudinary.folderName=snapgram
# Kafka producer
spring.kafka.bootstrap-servers=localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=-1
spring.kafka.producer.retries=1
spring.kafka.producer.properties.[enable.idempotence]=true
spring.kafka.producer.properties.[max.in.flight.requests.per.connection]=5
# Kafka consumer
spring.kafka.consumer.group-id=snapgram
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.fasterxml.jackson.databind.JsonNode
spring.kafka.consumer.auto-offset-reset=earliest
# Kafka logging
logging.level.org.apache.kafka=ERROR
logging.level.org.apache.kafka.clients=ERROR